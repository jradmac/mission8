// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace mission8.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250224165837_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("mission8.Models.Quadrent1", b =>
                {
                    b.Property<int>("Q1Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quadrent")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TruFalse")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Q1Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Quadrent1s");
                });

            modelBuilder.Entity("mission8.Models.Quadrent2", b =>
                {
                    b.Property<int>("Q2Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quadrent")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TruFalse")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Q2Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Quadrent2s");
                });

            modelBuilder.Entity("mission8.Models.Quadrent3", b =>
                {
                    b.Property<int>("Q3Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quadrent")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TruFalse")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Q3Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Quadrent3s");
                });

            modelBuilder.Entity("mission8.Models.Quadrent4", b =>
                {
                    b.Property<int>("Q4Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quadrent")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TruFalse")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Q4Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Quadrent4s");
                });

            modelBuilder.Entity("mission8.Models.Type", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TypeId");

                    b.ToTable("Type");

                    b.HasData(
                        new
                        {
                            TypeId = 1,
                            TypeName = "Home"
                        },
                        new
                        {
                            TypeId = 2,
                            TypeName = "School"
                        },
                        new
                        {
                            TypeId = 3,
                            TypeName = "Work"
                        },
                        new
                        {
                            TypeId = 4,
                            TypeName = "Church"
                        });
                });

            modelBuilder.Entity("mission8.Models.Quadrent1", b =>
                {
                    b.HasOne("mission8.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("mission8.Models.Quadrent2", b =>
                {
                    b.HasOne("mission8.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("mission8.Models.Quadrent3", b =>
                {
                    b.HasOne("mission8.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("mission8.Models.Quadrent4", b =>
                {
                    b.HasOne("mission8.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
